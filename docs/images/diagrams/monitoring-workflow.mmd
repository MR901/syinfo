sequenceDiagram
    %% SyInfo Monitoring Workflow (Updated)

    participant User
    participant CLI as CLI Interface
    participant Monitor as SystemMonitor
    participant System as System APIs
    participant Thread as Monitor Thread
    participant Output as Output Handler

    Note over User,Output: System Monitoring Workflow

    User->>CLI: syinfo --system-monitor -t 60 -i 5
    Note right of User: Monitor for 60s, 5s intervals

    CLI->>Monitor: SystemMonitor(interval=5)
    Monitor-->>CLI: monitor instance

    CLI->>Monitor: start(duration=60)
    Monitor->>Thread: spawn monitoring thread
    Note right of Thread: Background monitoring

    CLI->>CLI: sleep(61) # Wait for completion

    loop Every 5 seconds (for 60 seconds)
        Thread->>System: collect CPU usage
        System-->>Thread: cpu_percent

        Thread->>System: collect memory usage
        System-->>Thread: memory_percent

        Thread->>System: collect disk usage
        System-->>Thread: disk_percent

        Thread->>System: collect network I/O
        System-->>Thread: io rates/cumulative

        Thread->>Thread: store data point
        Note right of Thread: {timestamp, cpu, memory, disk, network}

        Thread->>Thread: wait 5 seconds
    end

    Note over Thread: 60 seconds elapsed, stop monitoring
    Thread->>Thread: calculate summary stats
    Note right of Thread: averages, peaks, duration

    CLI->>Monitor: check is_running
    Monitor-->>CLI: False

    CLI->>Monitor: stop(print_summary=not --json)
    Monitor-->>CLI: {total_points, data_points, summary}

    alt JSON Output (--json flag)
        CLI->>Output: print JSON only
        Output-->>User: {"total_points": N, "data_points": [...], "summary": {...}}
    else Standard Output
        CLI->>Output: format summary table
        Output-->>User: Performance Summary Display
    end

    Note over User,Output: Monitoring Complete
